<?php

/**
 * Implements hook_help().
 */
function termstatus_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module
    case 'admin/help#termstatus':
      return '<p>' . t('Provides a checkbox on the term edit form in order to set the publishing state.') . '</p>';
  }
}

/**
 * Implements hook_menu().
 */
function termstatus_menu() {
  $items['admin/config/system/termstatus'] = array(
    'title' => 'Taxonomy Term Status',
    'description' => 'Control and rebuild taxonomy term status records',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('termstatus_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'termstatus.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function termstatus_permission() {
  $perms = array(
    'view unpublished taxonomy terms' => array(
      'title' => t('View unpublished taxonomy terms'),
    ),
  );

  return $perms;
}

/**
 * Implements hook_views_api().
 */
function termstatus_views_api() {
  return array(
    'api' => 2,
  );
}

/**
 * Implements hook_action_info().
 */
function termstatus_action_info() {
  return array(
    'termstatus_publish_action' => array(
      'type' => 'taxonomy_term',
      'label' => t('Publish taxonomy term'),
      'configurable' => FALSE,
      'behavior' => array('changes_property'),
      'triggers' => array('taxonomy_term_presave', 'taxonomy_term_insert', 'taxonomy_term_update', 'taxonomy_term_delete'),
    ),
    'termstatus_unpublish_action' => array(
      'type' => 'taxonomy_term',
      'label' => t('Unpublish taxonomy term'),
      'configurable' => FALSE,
      'behavior' => array('changes_property'),
      'triggers' => array('taxonomy_term_presave', 'taxonomy_term_insert', 'taxonomy_term_update', 'taxonomy_term_delete'),
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function termstatus_form_taxonomy_form_term_alter(&$form, &$form_state, $form_id) {
  $term = $form_state['term'];

  $form['termstatus'] = array(
    '#type' => 'fieldset',
    '#access' => user_access('administer taxonomy'),
    '#title' => t('Publishing options'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#weight' => 95,
  );
  $form['termstatus']['status'] = array(
    '#type' => 'checkbox',
    '#title' => t('Published'),
    '#default_value' => $term->status,
    '#description' => t('Only privileged users are allowed to view a taxonomy term if this option is disabled'),
  );
}

/**
 * Implements hook_taxonomy_term_load().
 */
function termstatus_taxonomy_term_load($terms) {
  foreach ($terms as $term) {
    $term->status = 1;
  }

  $result = db_query('SELECT tid, status FROM {termstatus} WHERE tid IN (:tids)',
    array(':tids' => array_keys($terms)));

  foreach ($result as $record) {
    $terms[$record->tid]->status = $record->status;
  }
}

/**
 * Implements hook_taxonomy_term_insert().
 */
function termstatus_taxonomy_term_insert($term) {
  termstatus_term_save($term);
}

/**
 * Implements hook_taxonomy_term_update().
 */
function termstatus_taxonomy_term_update($term) {
  termstatus_term_save($term);
}

/**
 * Implements hook_taxonomy_term_delete().
 */
function termstatus_taxonomy_term_delete($term) {
  termstatus_term_delete($term->tid);
}

/**
 * Implements hook_query_TAG_alter().
 */
function termstatus_query_term_access_alter(QueryAlterableInterface $query) {
  $tables =& $query->getTables();

  if (variable_get('taxonomy_term_status_enable', FALSE) &&
    !user_access('view unpublished taxonomy terms')) {
    // Extract taxonomy_term_data tables
    foreach ($tables as $alias => $table) {
      if ($table['table'] == 'taxonomy_term_data') {
        // Add one inner join to termstatus for each taxonomy_term_data
        // instance
        $query->leftjoin('termstatus', 'termstatus_' . $alias,
          $alias . '.tid = termstatus_' . $alias . '.tid');
        $query->condition('termstatus_' . $alias . '.status', 1, '=');
      }
    }
  }
}

/**
 * Action callback: publish a term
 */
function termstatus_publish_action($term, $context = array()) {
  $term->status = 1;
  watchdog('action', 'Set taxonomy term %title to published.', array('%title' => $term->name));
}

/**
 * action callback: unpublish a term
 */
function termstatus_unpublish_action($term, $context = array()) {
  $term->status = 0;
  watchdog('action', 'Set taxonomy term %title to unpublished.', array('%title' => $term->name));
}

/**
 * Save the status record of a term
 */
function termstatus_term_save($term) {
  db_merge('termstatus')
    ->key(array('tid' => $term->tid))
    ->fields(array(
      'status' => $term->status,
    ))
    ->execute();
}

/**
 * Remove the status record of a term
 */
function termstatus_term_delete($tid) {
  db_delete('termstatus')->condition('tid', $tid)->execute();
}
